<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ibAbout.NoFocusImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMEAAADBCAYAAAB2QtScAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAFiUAABYlAUlSJPAAAAXxaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNr
        ZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHht
        bG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJBZG9iZSBYTVAgQ29yZSA1LjYtYzE0MCA3OS4x
        NjA0NTEsIDIwMTcvMDUvMDYtMDE6MDg6MjEgICAgICAgICI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0
        cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24g
        cmRmOmFib3V0PSIiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1sbnM6
        eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwOi8v
        bnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiIHhtbG5zOmRjPSJodHRwOi8v
        cHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cGhvdG9zaG9wPSJodHRwOi8vbnMuYWRvYmUu
        Y29tL3Bob3Rvc2hvcC8xLjAvIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDQyAoTWFj
        aW50b3NoKSIgeG1wOkNyZWF0ZURhdGU9IjIwMTgtMDctMDJUMDA6MDE6NTErMDg6MDAiIHhtcDpNZXRh
        ZGF0YURhdGU9IjIwMTgtMDctMDJUMDA6MDE6NTErMDg6MDAiIHhtcDpNb2RpZnlEYXRlPSIyMDE4LTA3
        LTAyVDAwOjAxOjUxKzA4OjAwIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjI3NzUzYjhlLWJkZWEt
        NDQzMy05MGRiLWEyZjE4NDU4ZmYwOCIgeG1wTU06RG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9z
        aG9wOmYzMDg4NzI4LWRkY2EtZTQ0ZC05YmU2LWRhNDllNWM0NWNiYyIgeG1wTU06T3JpZ2luYWxEb2N1
        bWVudElEPSJ4bXAuZGlkOmIzZjUzMTE2LWU2YzUtNGQ4Ny04YTZiLWY1NmY3N2MyOTdmMCIgZGM6Zm9y
        bWF0PSJpbWFnZS9wbmciIHBob3Rvc2hvcDpDb2xvck1vZGU9IjMiIHBob3Rvc2hvcDpJQ0NQcm9maWxl
        PSJzUkdCIElFQzYxOTY2LTIuMSI+IDx4bXBNTTpIaXN0b3J5PiA8cmRmOlNlcT4gPHJkZjpsaSBzdEV2
        dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YjNmNTMxMTYtZTZjNS00
        ZDg3LThhNmItZjU2Zjc3YzI5N2YwIiBzdEV2dDp3aGVuPSIyMDE4LTA3LTAyVDAwOjAxOjUxKzA4OjAw
        IiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgQ0MgKE1hY2ludG9zaCkiLz4gPHJk
        ZjpsaSBzdEV2dDphY3Rpb249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjI3NzUzYjhl
        LWJkZWEtNDQzMy05MGRiLWEyZjE4NDU4ZmYwOCIgc3RFdnQ6d2hlbj0iMjAxOC0wNy0wMlQwMDowMTo1
        MSswODowMCIgc3RFdnQ6c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIENDIChNYWNpbnRvc2gp
        IiBzdEV2dDpjaGFuZ2VkPSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8L3JkZjpEZXNj
        cmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/Ph+gzCwAABQu
        SURBVHhe7Z0rsxU7FsePAIPAMOJUzUUMVXMRTNWcqrkI2mAQGDyeD4DH4/F4PgAej8fj+QCY4Q5n9j/0
        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
        rrbf1f8Bcf82OBe3+hUAAAAASUVORK5CYII=
</value>
  </data>
</root>